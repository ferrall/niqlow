/** Replicate MLE Estimates Reported in Rust (1987).

<DT>This package extends the basic model <a href="RustEmet1987.ox.html">RustEmet1987</a> to read in data and estimate parameters using maximum likelihood.</DT>

<DT>The results produced by this code are presented in <a href="https://ferrall.github.io/OODP/Rust1987.html">Ferrall (2022)</a></DT>

<DT>`RustEstimates` is a class that stores the objects used for the estimation, including the solution method, outcome data set, and MLE optimization algorithm.  The state space $\Theta$ is built up from the `EZ` class that in turn is derived from the `Zurcher` class for the value function iteration without data.</DT>

<DT>There is a menu for selecting which estimates to replicate, which can be used interactively running <a href="./main.ox.html"><code>examples/main.ox</code></a> or using command line arguments. The latter requires knowing the index of options to code.  See the script in <code>/examples/my_estimate_rust_script</code>.  </DT>

<DT>`RustEstimates::Run`(targ) carries out the staged-estimation for a single specification.  It is the function that is called by the menu after setting options.  Or a user can call it directly by sending the list of options directly. The model is set up, data read in, estimated parameters added to the econometric objective, and 3 stages of estimation are carried out.</DT>

<DT>The data are stored as a `BusData` object, which reads in the data and matches columns of the data file to variables in the model.  Which file is read in is determined by the options sent
to `RustEstimates::Run`().</DT>


</DT>


**/ 